---
title: "ARS"
format: html
editor: visual
author: Wellington Santos Souza
lang: pt 
date: "`r format(Sys.Date())`" 
---

## Análise de Redes Sociais

A [análise de redes sociais](https://www.researchgate.net/publication/261288963_Topics_in_social_network_analysis_and_network_science) é um campo de estudos destinado a investigar a estrutura das relações que conectam indivíduos (ou outras unidades sociais, como organizações) e como essas relações influenciam comportamentos e atitudes.

Fonte: [Análise de redes sociais: um campo de estudos para redes de toda natureza --- Ilumeo - Data Science Company](https://ilumeo.com.br/todos-posts/2019/05/06/analise-de-redes-sociais)

Pacotes

```{r}
#| message: false
if(!require(tidyverse)){install.packages("tidyverse")};library(tidyverse) 
if(!require(igraph)){install.packages("igraph")};library(igraph)  
if(!require(tidygraph)){install.packages("tidygraph")};library(tidygraph) 
if(!require(visNetwork)){install.packages("visNetwork")};library(visNetwork)
if(!require(summarytools)){install.packages("summarytools")};library(summarytools)
if(!require(kableExtra)){install.packages("kableExtra")};library(kableExtra)
```

# Jazz Musicians Network

Network of Jazz musicians.

The Jazz musicians network uses a database of jazz recordings to study the collaboration network of jazz musicians. Two levels of collaborations are studied. First, the collaboration network between individuals, where two musicians are connected if they have played in the same band and second, the collaboration between bands, where two bands are connected if they have a musician in common.

[NET file](https://gephi.org/datasets/jazz.net.zip). **Jazz musicians network**: List of edges of the network of Jazz musicians. P.Gleiser and L. Danon , Adv. Complex Syst.6, 565 (2003).

```{r}
#| message: false
# relações
arestas <- read_csv("data/arestas.csv") %>% 
  select(Source, Target,Weight) %>% 
  mutate_at(vars(Source, Target), as.character) %>% 
  rename(from=Source, to=Target)
```

```{r}
#| message: false
# nos
nos <- read_csv("data/nos.csv") %>% 
  select(Id,Label,timeset) %>% 
  rename(group=timeset,id=Id)
nos$group <- 1

```

```{r}
# removendo possiveis relações duplicadas
l <- unique(arestas$from) 
l2 <- unique(arestas$to) 
l3 <- unique(c(l, l2))
```

```{r}
# mater somente os nós que estão nas arestas
nosTotal <- filter(nos, id %in% l3) %>% 
  mutate(Id = as.character(id))
```

```{r}
nos <- nosTotal
```

```{r}
rm(list = setdiff(ls(), c("nos", "arestas")))
```

#### Analisando a Rede

```{r}
# criar objeto de rede
nt <- tbl_graph(nodes = nos, edges = arestas, node_key = "id", directed = FALSE)
```

```{r}
# transformar relacoes multiplas em peso
nt <- as_tbl_graph(simplify(nt))
```

```{r}
# identificando grupos
comm <- cluster_fast_greedy(nt, weights = E(nt)$weight)
nos$membership <- comm$membership
```

```{r}
data.frame(Métrica = c("Número de nós",
                                        "Número de relacões",
                                        "Número de componentes",
                                        "Densidade",
                                        "Distancia geodésica média",
                                        "Diâmetro",
                                        "Transitividade global",
                                        "Transitividade local",
                                        "Número de comunidades",
                                        "Modularidade",
                                        "Assortatividade"
                                        ),
                            Valor = c(round(gorder(nt),2),
                                      round(gsize(nt),2),
                                      round(components(nt)$no,2),
                                      round(edge_density(nt),2),
                                      round(mean_distance(nt),2),
                                      round(diameter(nt),2),
                                      round(transitivity(nt, type = "global"),2),
                                      round(transitivity(nt, type = "localaverage"),2),
                                      round(length(comm),2),
                                      round(modularity(comm),2),
                                      round(assortativity_nominal(nt, comm$membership),2)
                            )
)%>%
  kbl(caption = "Métricas da Rede") %>%
  kable_classic(full_width = F, html_font = "Cambria") 
```

Métricas ao nível do nó

```{r}
# Centralidade de grau
nos$grau <- degree(nt)
```

```{r}
# grau de intermediação
nos$intermediacao <- betweenness(nt)
```

```{r}
# grau de proximidade
nos$proximidade <- closeness(nt, normalized = TRUE)
```

```{r}
# Excentricidade
nos$excentricidade <- eccentricity(nt)
```

```{r}
# Centralidade de autovetor
nos$autovetor <- eigen_centrality(nt)$vector
```

```{r}
# Transitividade
nos$transitividade <- transitivity(nt, type = "local")
```

```{r}
(metricas_ind <- nos %>%
  select(grau, intermediacao, proximidade, excentricidade, autovetor, transitividade) %>%
  descr(stats = c("min", "q1", "med", "mean", "sd", "q3", "max"), transpose = TRUE) %>% 
  round(., digits = 2))
```

#### Gerando o Grafo

```{r}
nos_new <- nos
nos_new$value <- nos_new$grau 
nos_new$label <- 
nos_new$group <- comm$membership 
nos_new$title <- paste0("Músico: ", nos_new$Label,
                          "</b><br>comunidade: ", nos_new$membership,
                          "</b><br>grau: ", nos_new$grau)
```

```{r}
arestas_new <- arestas
arestas_new$width <- arestas_new$Weight
arestas_new$title <- paste0("peso: ", arestas_new$Weight)
```

```{r}
visNetwork(nos_new, arestas_new, background = "white") %>%
  visIgraphLayout(layout = "layout_nicely", randomSeed = 1) %>% 
  visGroups() %>% 
  visOptions(highlightNearest = list(enabled = T, degree = 1, hover = T),
             selectedBy = list(variable = "Label", style = c(150, 26)))
```
